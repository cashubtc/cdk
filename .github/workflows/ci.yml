name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  pre-commit-checks:
    name: "Cargo fmt, typos"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get flake hash
        id: flake-hash
        run: echo "hash=$(sha256sum flake.lock | cut -d' ' -f1 | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "nightly-${{ steps.flake-hash.outputs.hash }}"
      - name: Cargo fmt
        run: |
          nix develop -i -L .#nightly --command bash -c '
            # Force use of Nix-provided rustfmt
            export RUSTFMT=$(command -v rustfmt)
            cargo fmt --check
          '
      - name: typos
        run: nix develop -i -L .#nightly --command typos

  examples:
    name: "Run examples"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: pre-commit-checks
    strategy:
      fail-fast: true
      matrix:
        build-args:
          [
            mint-token,
            melt-token
          ]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get flake hash
        id: flake-hash
        run: echo "hash=$(sha256sum flake.lock | cut -d' ' -f1 | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "stable-${{ steps.flake-hash.outputs.hash }}"
      - name: Run example
        run: nix develop -i -L .#stable --command cargo r --example ${{ matrix.build-args }}

  clippy:
    name: "Workspace clippy"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: pre-commit-checks
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get flake hash
        id: flake-hash
        run: echo "hash=$(sha256sum flake.lock | cut -d' ' -f1 | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "stable-${{ steps.flake-hash.outputs.hash }}"
      - name: Clippy
        run: nix develop -i -L .#stable --command cargo clippy --workspace --all-features -- -D warnings

  test:
    name: "Workspace tests"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: pre-commit-checks
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "stable"
      - name: Test
        run: nix develop -i -L .#stable --command cargo test --workspace

  fake-mint-itest:
    name: "Integration fake mint tests"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: pre-commit-checks
    strategy:
      fail-fast: true
      matrix:
        database:
          [
          SQLITE,
          ]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get flake hash
        id: flake-hash
        run: echo "hash=$(sha256sum flake.lock | cut -d' ' -f1 | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "stable-${{ steps.flake-hash.outputs.hash }}"
      - name: Clippy
        run: nix develop -i -L .#stable --command cargo clippy -- -D warnings
      - name: Test fake mint
        run: nix develop -i -L .#stable --command just fake-mint-itest ${{ matrix.database }}

  msrv-build:
    name: "MSRV workspace build"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: pre-commit-checks
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get flake hash
        id: flake-hash
        run: echo "hash=$(sha256sum flake.lock | cut -d' ' -f1 | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "msrv-${{ steps.flake-hash.outputs.hash }}"
      - name: Build workspace
        run: nix develop -i -L .#msrv --command cargo build --workspace


  check-wasm:
    name: Check WASM
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: pre-commit-checks
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get flake hash
        id: flake-hash
        run: echo "hash=$(sha256sum flake.lock | cut -d' ' -f1 | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "stable-${{ steps.flake-hash.outputs.hash }}"
      - name: Build cdk for WASM
        run: nix develop -i -L .#stable --command cargo build -p cdk --target wasm32-unknown-unknown
